// Code generated by github.com/worldiety/macro. DO NOT EDIT.


import type { Ptr } from '@/shared/protocol/ora/ptr';
import type { ComponentType } from '@/shared/protocol/ora/componentType';
import type { Property } from '@/shared/protocol/ora/property';

export class Slider {
    private _id : Ptr;
    private _type : ComponentType;
    private _disabled : Property<boolean>;
    private _label : Property<string>;
    private _hint : Property<string>;
    private _error : Property<string>;
    private _rangeMode : Property<boolean>;
    private _startValue : Property<number>;
    private _endValue : Property<number>;
    private _min : Property<number>;
    private _max : Property<number>;
    private _stepsize : Property<number>;
    private _startInitialized : Property<boolean>;
    private _endInitialized : Property<boolean>;
    private _showLabel : Property<boolean>;
    private _labelSuffix : Property<string>;
    private _showTickMarks : Property<boolean>;
    private _onChanged : Property<Ptr>;
    get ptr(): Ptr{
        return this._id;
    }
    set ptr(value: Ptr){
        this._id = value;
    }
    get type(): ComponentType{
        return this._type;
    }
    set type(value: ComponentType){
        this._type = value;
    }
    get disabled(): Property<boolean>{
        return this._disabled;
    }
    set disabled(value: Property<boolean>){
        this._disabled = value;
    }
    get label(): Property<string>{
        return this._label;
    }
    set label(value: Property<string>){
        this._label = value;
    }
    get hint(): Property<string>{
        return this._hint;
    }
    set hint(value: Property<string>){
        this._hint = value;
    }
    get error(): Property<string>{
        return this._error;
    }
    set error(value: Property<string>){
        this._error = value;
    }
    get rangeMode(): Property<boolean>{
        return this._rangeMode;
    }
    set rangeMode(value: Property<boolean>){
        this._rangeMode = value;
    }
    get startValue(): Property<number>{
        return this._startValue;
    }
    set startValue(value: Property<number>){
        this._startValue = value;
    }
    get endValue(): Property<number>{
        return this._endValue;
    }
    set endValue(value: Property<number>){
        this._endValue = value;
    }
    get min(): Property<number>{
        return this._min;
    }
    set min(value: Property<number>){
        this._min = value;
    }
    get max(): Property<number>{
        return this._max;
    }
    set max(value: Property<number>){
        this._max = value;
    }
    get stepsize(): Property<number>{
        return this._stepsize;
    }
    set stepsize(value: Property<number>){
        this._stepsize = value;
    }
    get startInitialized(): Property<boolean>{
        return this._startInitialized;
    }
    set startInitialized(value: Property<boolean>){
        this._startInitialized = value;
    }
    get endInitialized(): Property<boolean>{
        return this._endInitialized;
    }
    set endInitialized(value: Property<boolean>){
        this._endInitialized = value;
    }
    get showLabel(): Property<boolean>{
        return this._showLabel;
    }
    set showLabel(value: Property<boolean>){
        this._showLabel = value;
    }
    get labelSuffix(): Property<string>{
        return this._labelSuffix;
    }
    set labelSuffix(value: Property<string>){
        this._labelSuffix = value;
    }
    get showTickMarks(): Property<boolean>{
        return this._showTickMarks;
    }
    set showTickMarks(value: Property<boolean>){
        this._showTickMarks = value;
    }
    get onChanged(): Property<Ptr>{
        return this._onChanged;
    }
    set onChanged(value: Property<Ptr>){
        this._onChanged = value;
    }
}

